2023-01-23 16:21:53,689:INFO:Initializing load_model()
2023-01-23 16:21:53,689:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:22:21,380:INFO:Initializing load_model()
2023-01-23 16:22:21,380:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:28:29,194:INFO:Initializing load_model()
2023-01-23 16:28:29,196:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:29:33,751:INFO:Initializing load_model()
2023-01-23 16:29:33,753:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:30:14,685:INFO:Initializing load_model()
2023-01-23 16:30:14,687:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:32:06,175:INFO:Initializing load_model()
2023-01-23 16:32:06,177:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:34:47,070:INFO:Initializing load_model()
2023-01-23 16:34:47,072:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:35:41,861:INFO:Initializing load_model()
2023-01-23 16:35:41,862:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:36:55,983:INFO:Initializing load_model()
2023-01-23 16:36:55,984:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:37:25,619:INFO:Initializing load_model()
2023-01-23 16:37:25,620:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 16:40:22,802:INFO:Initializing load_model()
2023-01-23 16:40:22,804:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 18:23:39,423:INFO:Initializing load_model()
2023-01-23 18:23:39,424:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 18:27:55,076:INFO:Initializing load_model()
2023-01-23 18:27:55,078:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 18:31:16,899:INFO:Initializing load_model()
2023-01-23 18:31:16,900:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 18:31:22,975:INFO:Initializing predict_model()
2023-01-23 18:31:22,977:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression',
                                      target='charges')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target=...
                ('fix_perfect', Remove_100(target='charges')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='charges',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-23 18:31:22,977:INFO:Checking exceptions
2023-01-23 18:31:22,977:INFO:Preloading libraries
2023-01-23 18:31:44,467:INFO:Initializing predict_model()
2023-01-23 18:31:44,467:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression',
                                      target='charges')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target=...
                ('fix_perfect', Remove_100(target='charges')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='charges',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-23 18:31:44,468:INFO:Checking exceptions
2023-01-23 18:31:44,468:INFO:Preloading libraries
2023-01-23 18:39:58,689:INFO:Initializing load_model()
2023-01-23 18:39:58,691:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 18:40:51,805:INFO:Initializing load_model()
2023-01-23 18:40:51,807:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 18:41:59,730:INFO:Initializing predict_model()
2023-01-23 18:41:59,731:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression',
                                      target='charges')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target=...
                ('fix_perfect', Remove_100(target='charges')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='charges',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-23 18:41:59,731:INFO:Checking exceptions
2023-01-23 18:41:59,732:INFO:Preloading libraries
2023-01-23 18:43:28,724:INFO:Initializing load_model()
2023-01-23 18:43:28,726:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 20:06:40,107:INFO:Initializing load_model()
2023-01-23 20:06:40,108:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-01-23 20:07:09,744:INFO:Initializing predict_model()
2023-01-23 20:07:09,744:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression',
                                      target='charges')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target=...
                ('fix_perfect', Remove_100(target='charges')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='charges',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-23 20:07:09,744:INFO:Checking exceptions
2023-01-23 20:07:09,744:INFO:Preloading libraries
2023-01-23 20:09:01,881:INFO:Initializing load_model()
2023-01-23 20:09:01,894:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:12:32,507:INFO:Initializing load_model()
2023-02-15 14:12:32,509:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:12:36,930:INFO:Initializing load_model()
2023-02-15 14:12:36,930:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:20:24,715:INFO:Initializing load_model()
2023-02-15 14:20:24,716:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:30:35,270:INFO:Initializing load_model()
2023-02-15 14:30:35,272:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:35:22,501:INFO:Initializing load_model()
2023-02-15 14:35:22,503:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:37:25,434:INFO:Initializing load_model()
2023-02-15 14:37:25,434:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:38:23,577:INFO:Initializing load_model()
2023-02-15 14:38:23,578:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:43:24,702:INFO:Initializing load_model()
2023-02-15 14:43:24,705:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:46:24,798:INFO:Initializing load_model()
2023-02-15 14:46:24,799:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:47:03,947:INFO:Initializing load_model()
2023-02-15 14:47:03,947:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:47:56,943:INFO:Initializing load_model()
2023-02-15 14:47:56,943:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:48:30,767:INFO:Initializing load_model()
2023-02-15 14:48:30,767:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:50:40,575:INFO:Initializing load_model()
2023-02-15 14:50:40,577:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:52:00,527:INFO:Initializing load_model()
2023-02-15 14:52:00,527:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 14:55:04,992:INFO:Initializing load_model()
2023-02-15 14:55:04,992:INFO:load_model(model_name=linearRegressionModel, platform=None, authentication=None, verbose=True)
2023-02-15 18:21:50,685:INFO:Initializing load_model()
2023-02-15 18:21:50,687:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:22:11,968:INFO:Initializing load_model()
2023-02-15 18:22:11,970:INFO:load_model(model_name=./models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:22:38,473:INFO:Initializing load_model()
2023-02-15 18:22:38,475:INFO:load_model(model_name=/models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:23:09,464:INFO:Initializing load_model()
2023-02-15 18:23:09,466:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:23:50,871:INFO:Initializing load_model()
2023-02-15 18:23:50,873:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:24:18,966:INFO:Initializing load_model()
2023-02-15 18:24:18,966:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:29:03,631:INFO:Initializing predict_model()
2023-02-15 18:29:03,633:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       target_variable='Bankrupt?',
                                       threshold=0.9)),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 18:29:03,633:INFO:Checking exceptions
2023-02-15 18:29:03,636:INFO:Preloading libraries
2023-02-15 18:29:24,805:INFO:Initializing predict_model()
2023-02-15 18:29:24,807:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       target_variable='Bankrupt?',
                                       threshold=0.9)),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 18:29:24,807:INFO:Checking exceptions
2023-02-15 18:29:24,807:INFO:Preloading libraries
2023-02-15 18:29:36,640:INFO:Initializing predict_model()
2023-02-15 18:29:36,642:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       target_variable='Bankrupt?',
                                       threshold=0.9)),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 18:29:36,642:INFO:Checking exceptions
2023-02-15 18:29:36,642:INFO:Preloading libraries
2023-02-15 18:40:04,503:INFO:Initializing load_model()
2023-02-15 18:40:04,505:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:40:29,567:INFO:Initializing load_model()
2023-02-15 18:40:29,567:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:40:40,218:INFO:Initializing predict_model()
2023-02-15 18:40:40,218:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       target_variable='Bankrupt?',
                                       threshold=0.9)),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 18:40:40,218:INFO:Checking exceptions
2023-02-15 18:40:40,218:INFO:Preloading libraries
2023-02-15 18:44:00,648:INFO:Initializing load_model()
2023-02-15 18:44:00,650:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:44:23,882:INFO:Initializing predict_model()
2023-02-15 18:44:23,882:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       target_variable='Bankrupt?',
                                       threshold=0.9)),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 18:44:23,882:INFO:Checking exceptions
2023-02-15 18:44:23,882:INFO:Preloading libraries
2023-02-15 18:50:20,632:INFO:Initializing load_model()
2023-02-15 18:50:20,634:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:50:36,751:INFO:Initializing load_model()
2023-02-15 18:50:36,752:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:51:12,083:INFO:Initializing load_model()
2023-02-15 18:51:12,085:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:51:43,608:INFO:Initializing load_model()
2023-02-15 18:51:43,610:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 18:52:11,527:INFO:Initializing load_model()
2023-02-15 18:52:11,529:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:41:34,203:INFO:Initializing load_model()
2023-02-15 19:41:34,205:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:43:16,976:INFO:Initializing load_model()
2023-02-15 19:43:16,977:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:44:22,113:INFO:Initializing load_model()
2023-02-15 19:44:22,114:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:45:11,000:INFO:Initializing load_model()
2023-02-15 19:45:11,002:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:45:40,933:INFO:Initializing load_model()
2023-02-15 19:45:40,935:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:46:24,854:INFO:Initializing load_model()
2023-02-15 19:46:24,855:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:47:45,715:INFO:Initializing load_model()
2023-02-15 19:47:45,717:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:48:29,093:INFO:Initializing load_model()
2023-02-15 19:48:29,095:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:48:57,592:INFO:Initializing load_model()
2023-02-15 19:48:57,592:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:49:30,309:INFO:Initializing load_model()
2023-02-15 19:49:30,310:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:49:54,668:INFO:Initializing load_model()
2023-02-15 19:49:54,668:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:50:58,821:INFO:Initializing load_model()
2023-02-15 19:50:58,823:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:52:47,148:INFO:Initializing load_model()
2023-02-15 19:52:47,148:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:54:16,502:INFO:Initializing load_model()
2023-02-15 19:54:16,504:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:56:46,739:INFO:Initializing load_model()
2023-02-15 19:56:46,741:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:57:33,702:INFO:Initializing load_model()
2023-02-15 19:57:33,703:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:57:55,436:INFO:Initializing load_model()
2023-02-15 19:57:55,437:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:58:23,900:INFO:Initializing load_model()
2023-02-15 19:58:23,900:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:59:01,623:INFO:Initializing load_model()
2023-02-15 19:59:01,623:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:59:16,336:INFO:Initializing load_model()
2023-02-15 19:59:16,336:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 19:59:38,944:INFO:Initializing load_model()
2023-02-15 19:59:38,946:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:00:58,517:INFO:Initializing load_model()
2023-02-15 20:00:58,518:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:02:57,335:INFO:Initializing load_model()
2023-02-15 20:02:57,337:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:04:05,795:INFO:Initializing load_model()
2023-02-15 20:04:05,797:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:09:20,252:INFO:Initializing load_model()
2023-02-15 20:09:20,254:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:09:45,864:INFO:Initializing load_model()
2023-02-15 20:09:45,865:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:10:26,053:INFO:Initializing load_model()
2023-02-15 20:10:26,054:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:11:25,650:INFO:Initializing load_model()
2023-02-15 20:11:25,651:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:11:38,917:INFO:Initializing predict_model()
2023-02-15 20:11:38,917:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       target_variable='Bankrupt?',
                                       threshold=0.9)),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 20:11:38,917:INFO:Checking exceptions
2023-02-15 20:11:38,917:INFO:Preloading libraries
2023-02-15 20:13:00,320:INFO:Initializing load_model()
2023-02-15 20:13:00,322:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:17:56,546:INFO:Initializing load_model()
2023-02-15 20:17:56,548:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:19:39,292:INFO:Initializing load_model()
2023-02-15 20:19:39,294:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:25:24,892:INFO:Initializing load_model()
2023-02-15 20:25:24,894:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:26:37,536:INFO:Initializing load_model()
2023-02-15 20:26:37,537:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:27:46,927:INFO:Initializing load_model()
2023-02-15 20:27:46,928:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:28:50,113:INFO:Initializing load_model()
2023-02-15 20:28:50,114:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 20:38:49,628:INFO:Initializing load_model()
2023-02-15 20:38:49,630:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 21:48:41,720:INFO:Initializing load_model()
2023-02-15 21:48:41,722:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 21:51:41,779:INFO:Initializing load_model()
2023-02-15 21:51:41,780:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 21:52:08,352:INFO:Initializing predict_model()
2023-02-15 21:52:08,352:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 21:52:08,352:INFO:Checking exceptions
2023-02-15 21:52:08,353:INFO:Preloading libraries
2023-02-15 21:54:02,965:INFO:Initializing load_model()
2023-02-15 21:54:02,966:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 21:54:18,831:INFO:Initializing load_model()
2023-02-15 21:54:18,833:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 21:54:41,448:INFO:Initializing load_model()
2023-02-15 21:54:41,449:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 21:55:34,147:INFO:Initializing load_model()
2023-02-15 21:55:34,149:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 21:55:46,231:INFO:Initializing predict_model()
2023-02-15 21:55:46,231:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 21:55:46,231:INFO:Checking exceptions
2023-02-15 21:55:46,231:INFO:Preloading libraries
2023-02-15 21:57:03,347:INFO:Initializing load_model()
2023-02-15 21:57:03,349:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 21:57:15,341:INFO:Initializing predict_model()
2023-02-15 21:57:15,342:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 21:57:15,342:INFO:Checking exceptions
2023-02-15 21:57:15,342:INFO:Preloading libraries
2023-02-15 22:01:17,693:INFO:Initializing load_model()
2023-02-15 22:01:17,695:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 22:11:49,767:INFO:Initializing load_model()
2023-02-15 22:11:49,769:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 22:12:01,882:INFO:Initializing predict_model()
2023-02-15 22:12:01,884:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 22:12:01,884:INFO:Checking exceptions
2023-02-15 22:12:01,884:INFO:Preloading libraries
2023-02-15 22:14:21,151:INFO:Initializing load_model()
2023-02-15 22:14:21,153:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 22:14:39,187:INFO:Initializing predict_model()
2023-02-15 22:14:39,188:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 22:14:39,189:INFO:Checking exceptions
2023-02-15 22:14:39,189:INFO:Preloading libraries
2023-02-15 22:15:46,591:INFO:Initializing load_model()
2023-02-15 22:15:46,594:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 22:16:04,783:INFO:Initializing predict_model()
2023-02-15 22:16:04,784:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 22:16:04,784:INFO:Checking exceptions
2023-02-15 22:16:04,784:INFO:Preloading libraries
2023-02-15 22:17:03,143:INFO:Initializing load_model()
2023-02-15 22:17:03,145:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 22:17:26,121:INFO:Initializing predict_model()
2023-02-15 22:17:26,125:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 22:17:26,125:INFO:Checking exceptions
2023-02-15 22:17:26,125:INFO:Preloading libraries
2023-02-15 22:18:26,598:INFO:Initializing load_model()
2023-02-15 22:18:26,600:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-15 22:18:40,301:INFO:Initializing predict_model()
2023-02-15 22:18:40,303:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 22:18:40,305:INFO:Checking exceptions
2023-02-15 22:18:40,308:INFO:Preloading libraries
2023-02-15 22:19:35,736:INFO:Initializing predict_model()
2023-02-15 22:19:35,737:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 22:19:35,738:INFO:Checking exceptions
2023-02-15 22:19:35,738:INFO:Preloading libraries
2023-02-15 22:19:55,920:INFO:Initializing predict_model()
2023-02-15 22:19:55,926:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-15 22:19:55,926:INFO:Checking exceptions
2023-02-15 22:19:55,926:INFO:Preloading libraries
2023-02-17 11:08:00,437:INFO:Initializing load_model()
2023-02-17 11:08:00,439:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 11:10:25,180:INFO:Initializing load_model()
2023-02-17 11:10:25,182:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 11:11:45,472:INFO:Initializing load_model()
2023-02-17 11:11:45,474:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 11:15:20,856:INFO:Initializing load_model()
2023-02-17 11:15:20,858:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 11:15:53,420:INFO:Initializing load_model()
2023-02-17 11:15:53,422:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 11:17:01,383:INFO:Initializing load_model()
2023-02-17 11:17:01,385:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 11:17:18,743:INFO:Initializing predict_model()
2023-02-17 11:17:18,743:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-17 11:17:18,743:INFO:Checking exceptions
2023-02-17 11:17:18,744:INFO:Preloading libraries
2023-02-17 11:17:19,027:INFO:Initializing predict_model()
2023-02-17 11:17:19,029:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-17 11:17:19,030:INFO:Checking exceptions
2023-02-17 11:17:19,030:INFO:Preloading libraries
2023-02-17 11:18:28,827:INFO:Initializing load_model()
2023-02-17 11:18:28,829:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 11:19:02,191:INFO:Initializing predict_model()
2023-02-17 11:19:02,191:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-17 11:19:02,191:INFO:Checking exceptions
2023-02-17 11:19:02,191:INFO:Preloading libraries
2023-02-17 11:22:00,028:INFO:Initializing load_model()
2023-02-17 11:22:00,028:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 11:22:20,148:INFO:Initializing predict_model()
2023-02-17 11:22:20,148:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-17 11:22:20,149:INFO:Checking exceptions
2023-02-17 11:22:20,149:INFO:Preloading libraries
2023-02-17 11:22:47,602:INFO:Initializing load_model()
2023-02-17 11:22:47,603:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 11:22:49,112:INFO:Initializing predict_model()
2023-02-17 11:22:49,112:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='Bankrupt?')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    t...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_depth=6, max_features='log2',
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=6, min_samples_split=9,
                                        n_estimators=190, n_jobs=-1,
                                        random_state=123)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-02-17 11:22:49,113:INFO:Checking exceptions
2023-02-17 11:22:49,113:INFO:Preloading libraries
2023-02-17 19:59:14,034:INFO:Initializing load_model()
2023-02-17 19:59:14,036:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 19:59:54,926:INFO:Initializing load_model()
2023-02-17 19:59:54,926:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-02-17 20:03:08,747:INFO:Initializing load_model()
2023-02-17 20:03:08,748:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:02:40,170:INFO:Initializing load_model()
2023-03-02 19:02:40,198:INFO:load_model(model_name=models/Final_RF_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:05:28,867:INFO:Initializing load_model()
2023-03-02 19:05:28,870:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:06:01,395:INFO:Initializing load_model()
2023-03-02 19:06:01,396:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:08:17,599:INFO:Initializing load_model()
2023-03-02 19:08:17,601:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:10:07,496:INFO:Initializing load_model()
2023-03-02 19:10:07,497:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:10:49,143:INFO:Initializing load_model()
2023-03-02 19:10:49,145:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:11:37,344:INFO:Initializing load_model()
2023-03-02 19:11:37,344:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:13:45,745:INFO:Initializing load_model()
2023-03-02 19:13:45,745:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:14:16,429:INFO:Initializing load_model()
2023-03-02 19:14:16,429:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:15:34,399:INFO:Initializing load_model()
2023-03-02 19:15:34,400:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:16:10,331:INFO:Initializing load_model()
2023-03-02 19:16:10,331:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-02 19:16:56,764:INFO:Initializing load_model()
2023-03-02 19:16:56,765:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 12:47:20,228:INFO:Initializing load_model()
2023-03-03 12:47:20,230:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 12:48:10,596:INFO:Initializing load_model()
2023-03-03 12:48:10,597:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 12:50:05,801:INFO:Initializing load_model()
2023-03-03 12:50:05,803:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 12:53:14,107:INFO:Initializing load_model()
2023-03-03 12:53:14,109:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 12:54:04,966:INFO:Initializing load_model()
2023-03-03 12:54:04,968:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 13:03:47,145:INFO:Initializing load_model()
2023-03-03 13:03:47,147:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 13:12:20,593:INFO:Initializing load_model()
2023-03-03 13:12:20,595:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 13:19:11,436:INFO:Initializing load_model()
2023-03-03 13:19:11,438:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 18:52:20,831:INFO:Initializing load_model()
2023-03-03 18:52:20,833:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 18:54:41,419:INFO:Initializing load_model()
2023-03-03 18:54:41,421:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 18:55:12,494:INFO:Initializing load_model()
2023-03-03 18:55:12,496:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 18:56:20,513:INFO:Initializing load_model()
2023-03-03 18:56:20,515:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 18:59:51,397:INFO:Initializing load_model()
2023-03-03 18:59:51,399:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:01:22,313:INFO:Initializing load_model()
2023-03-03 19:01:22,314:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:05:01,534:INFO:Initializing load_model()
2023-03-03 19:05:01,535:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:06:33,713:INFO:Initializing load_model()
2023-03-03 19:06:33,715:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:07:12,065:INFO:Initializing load_model()
2023-03-03 19:07:12,067:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:09:20,663:INFO:Initializing load_model()
2023-03-03 19:09:20,665:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:09:44,060:INFO:Initializing predict_model()
2023-03-03 19:09:44,061:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(features_todrop=['pol_number',
                                                       'claim_office',
                                                       'annual_premium',
                                                       'agecat',
                                                       'date_of_birth',
                                                       'pol_eff_dt'],
                                      ml_usecase='regression',
                                      numerical_features=['credit_score',
                                                          'traffic_index',
                                                          'veh_value',
                                                          'numclaims',
                                                          'claimcst0',
                                                          'age_at_eff_dt'],
                                      target='UNSUPERVISED_DUMMY_TARGET')),
                ('imputer',
                 Iterative_Imputer(classifi...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='UNSUPERVISED_DUMMY_TARGET')),
                ('fix_perfect', 'passthrough'),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 KMeans(n_clusters=4, n_jobs=-1, random_state=3550)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-03 19:09:44,061:INFO:Checking exceptions
2023-03-03 19:09:44,061:INFO:Preloading libraries
2023-03-03 19:13:04,725:INFO:Initializing load_model()
2023-03-03 19:13:04,726:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:14:45,328:INFO:Initializing load_model()
2023-03-03 19:14:45,329:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:15:09,062:INFO:Initializing load_model()
2023-03-03 19:15:09,063:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:17:07,848:INFO:Initializing load_model()
2023-03-03 19:17:07,850:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:17:44,034:INFO:Initializing load_model()
2023-03-03 19:17:44,036:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:18:17,737:INFO:Initializing load_model()
2023-03-03 19:18:17,739:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:19:36,136:INFO:Initializing load_model()
2023-03-03 19:19:36,137:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:20:52,033:INFO:Initializing load_model()
2023-03-03 19:20:52,035:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 19:27:13,634:INFO:Initializing predict_model()
2023-03-03 19:27:13,636:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(features_todrop=['pol_number',
                                                       'claim_office',
                                                       'annual_premium',
                                                       'agecat',
                                                       'date_of_birth',
                                                       'pol_eff_dt'],
                                      ml_usecase='regression',
                                      numerical_features=['credit_score',
                                                          'traffic_index',
                                                          'veh_value',
                                                          'numclaims',
                                                          'claimcst0',
                                                          'age_at_eff_dt'],
                                      target='UNSUPERVISED_DUMMY_TARGET')),
                ('imputer',
                 Iterative_Imputer(classifi...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='UNSUPERVISED_DUMMY_TARGET')),
                ('fix_perfect', 'passthrough'),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 KMeans(n_clusters=4, n_jobs=-1, random_state=3550)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-03 19:27:13,636:INFO:Checking exceptions
2023-03-03 19:27:13,636:INFO:Preloading libraries
2023-03-03 20:04:19,105:INFO:Initializing load_model()
2023-03-03 20:04:19,107:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:06:14,461:INFO:Initializing load_model()
2023-03-03 20:06:14,464:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:07:53,194:INFO:Initializing load_model()
2023-03-03 20:07:53,196:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:09:41,357:INFO:Initializing predict_model()
2023-03-03 20:09:41,359:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(features_todrop=['pol_number',
                                                       'claim_office',
                                                       'annual_premium',
                                                       'agecat',
                                                       'date_of_birth',
                                                       'pol_eff_dt'],
                                      ml_usecase='regression',
                                      numerical_features=['credit_score',
                                                          'traffic_index',
                                                          'veh_value',
                                                          'numclaims',
                                                          'claimcst0',
                                                          'age_at_eff_dt'],
                                      target='UNSUPERVISED_DUMMY_TARGET')),
                ('imputer',
                 Iterative_Imputer(classifi...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='UNSUPERVISED_DUMMY_TARGET')),
                ('fix_perfect', 'passthrough'),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 KMeans(n_clusters=4, n_jobs=-1, random_state=3550)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-03 20:09:41,360:INFO:Checking exceptions
2023-03-03 20:09:41,360:INFO:Preloading libraries
2023-03-03 20:10:54,822:INFO:Initializing load_model()
2023-03-03 20:10:54,824:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:12:22,563:INFO:Initializing load_model()
2023-03-03 20:12:22,566:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:12:46,108:INFO:Initializing load_model()
2023-03-03 20:12:46,110:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:14:55,596:INFO:Initializing load_model()
2023-03-03 20:14:55,598:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:17:55,318:INFO:Initializing load_model()
2023-03-03 20:17:55,320:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:18:40,336:INFO:Initializing load_model()
2023-03-03 20:18:40,339:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:21:39,566:INFO:Initializing load_model()
2023-03-03 20:21:39,568:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:27:33,940:INFO:Initializing load_model()
2023-03-03 20:27:33,942:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:28:43,846:INFO:Initializing load_model()
2023-03-03 20:28:43,848:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:29:16,932:INFO:Initializing load_model()
2023-03-03 20:29:16,933:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:30:48,401:INFO:Initializing load_model()
2023-03-03 20:30:48,403:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:30:52,679:INFO:Initializing predict_model()
2023-03-03 20:30:52,679:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(features_todrop=['pol_number',
                                                       'claim_office',
                                                       'annual_premium',
                                                       'agecat',
                                                       'date_of_birth',
                                                       'pol_eff_dt'],
                                      ml_usecase='regression',
                                      numerical_features=['credit_score',
                                                          'traffic_index',
                                                          'veh_value',
                                                          'numclaims',
                                                          'claimcst0',
                                                          'age_at_eff_dt'],
                                      target='UNSUPERVISED_DUMMY_TARGET')),
                ('imputer',
                 Iterative_Imputer(classifi...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='UNSUPERVISED_DUMMY_TARGET')),
                ('fix_perfect', 'passthrough'),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 KMeans(n_clusters=4, n_jobs=-1, random_state=3550)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-03 20:30:52,679:INFO:Checking exceptions
2023-03-03 20:30:52,679:INFO:Preloading libraries
2023-03-03 20:33:44,795:INFO:Initializing load_model()
2023-03-03 20:33:44,798:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:34:16,409:INFO:Initializing load_model()
2023-03-03 20:34:16,411:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:35:21,178:INFO:Initializing load_model()
2023-03-03 20:35:21,181:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:37:12,415:INFO:Initializing load_model()
2023-03-03 20:37:12,416:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:38:48,586:INFO:Initializing load_model()
2023-03-03 20:38:48,589:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:41:21,394:INFO:Initializing load_model()
2023-03-03 20:41:21,396:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:43:38,421:INFO:Initializing load_model()
2023-03-03 20:43:38,424:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:45:18,804:INFO:Initializing load_model()
2023-03-03 20:45:18,806:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:46:31,408:INFO:Initializing load_model()
2023-03-03 20:46:31,411:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:46:40,798:INFO:Initializing predict_model()
2023-03-03 20:46:40,798:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(features_todrop=['pol_number',
                                                       'claim_office',
                                                       'annual_premium',
                                                       'agecat',
                                                       'date_of_birth',
                                                       'pol_eff_dt'],
                                      ml_usecase='regression',
                                      numerical_features=['credit_score',
                                                          'traffic_index',
                                                          'veh_value',
                                                          'numclaims',
                                                          'claimcst0',
                                                          'age_at_eff_dt'],
                                      target='UNSUPERVISED_DUMMY_TARGET')),
                ('imputer',
                 Iterative_Imputer(classifi...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='UNSUPERVISED_DUMMY_TARGET')),
                ('fix_perfect', 'passthrough'),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 KMeans(n_clusters=4, n_jobs=-1, random_state=3550)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-03 20:46:40,798:INFO:Checking exceptions
2023-03-03 20:46:40,799:INFO:Preloading libraries
2023-03-03 20:47:46,556:INFO:Initializing load_model()
2023-03-03 20:47:46,557:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:47:49,564:INFO:Initializing predict_model()
2023-03-03 20:47:49,565:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(features_todrop=['pol_number',
                                                       'claim_office',
                                                       'annual_premium',
                                                       'agecat',
                                                       'date_of_birth',
                                                       'pol_eff_dt'],
                                      ml_usecase='regression',
                                      numerical_features=['credit_score',
                                                          'traffic_index',
                                                          'veh_value',
                                                          'numclaims',
                                                          'claimcst0',
                                                          'age_at_eff_dt'],
                                      target='UNSUPERVISED_DUMMY_TARGET')),
                ('imputer',
                 Iterative_Imputer(classifi...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='UNSUPERVISED_DUMMY_TARGET')),
                ('fix_perfect', 'passthrough'),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 KMeans(n_clusters=4, n_jobs=-1, random_state=3550)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-03 20:47:49,565:INFO:Checking exceptions
2023-03-03 20:47:49,565:INFO:Preloading libraries
2023-03-03 20:48:41,306:INFO:Initializing load_model()
2023-03-03 20:48:41,312:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:49:02,305:INFO:Initializing predict_model()
2023-03-03 20:49:02,305:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(features_todrop=['pol_number',
                                                       'claim_office',
                                                       'annual_premium',
                                                       'agecat',
                                                       'date_of_birth',
                                                       'pol_eff_dt'],
                                      ml_usecase='regression',
                                      numerical_features=['credit_score',
                                                          'traffic_index',
                                                          'veh_value',
                                                          'numclaims',
                                                          'claimcst0',
                                                          'age_at_eff_dt'],
                                      target='UNSUPERVISED_DUMMY_TARGET')),
                ('imputer',
                 Iterative_Imputer(classifi...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='UNSUPERVISED_DUMMY_TARGET')),
                ('fix_perfect', 'passthrough'),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 KMeans(n_clusters=4, n_jobs=-1, random_state=3550)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-03 20:49:02,306:INFO:Checking exceptions
2023-03-03 20:49:02,306:INFO:Preloading libraries
2023-03-03 20:52:04,072:INFO:Initializing load_model()
2023-03-03 20:52:04,074:INFO:load_model(model_name=models/K_Means_Model, platform=None, authentication=None, verbose=True)
2023-03-03 20:53:04,055:INFO:Initializing predict_model()
2023-03-03 20:53:04,057:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(features_todrop=['pol_number',
                                                       'claim_office',
                                                       'annual_premium',
                                                       'agecat',
                                                       'date_of_birth',
                                                       'pol_eff_dt'],
                                      ml_usecase='regression',
                                      numerical_features=['credit_score',
                                                          'traffic_index',
                                                          'veh_value',
                                                          'numclaims',
                                                          'claimcst0',
                                                          'age_at_eff_dt'],
                                      target='UNSUPERVISED_DUMMY_TARGET')),
                ('imputer',
                 Iterative_Imputer(classifi...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='UNSUPERVISED_DUMMY_TARGET')),
                ('fix_perfect', 'passthrough'),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 KMeans(n_clusters=4, n_jobs=-1, random_state=3550)]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=0, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-03 20:53:04,057:INFO:Checking exceptions
2023-03-03 20:53:04,057:INFO:Preloading libraries
